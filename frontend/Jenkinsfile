pipeline {
    agent any
    
    // Environment variables for AWS ECR
    environment {
        // AWS Configuration
        AWS_REGION = 'us-east-1'
        // AWS_ACCOUNT_ID = credentials('aws-account-id')  // Retrieve from Jenkins credentials
        ECR_REPOSITORY = 'sd5055-frontend'  // ECR repository name
        // IMAGE_TAG = "${env.BUILD_NUMBER}"
        // ECR_REGISTRY = "${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com"
        
        // // Docker image name
        // DOCKER_IMAGE = "${ECR_REGISTRY}/${ECR_REPOSITORY}:${IMAGE_TAG}"
        // DOCKER_IMAGE_LATEST = "${ECR_REGISTRY}/${ECR_REPOSITORY}:latest"
    }
    
    stages {
        stage('Checkout') {
            steps {
                echo 'Checking out source code...'
                checkout scm
            }
        }
        
        stage('Install Dependencies') {
            steps {
                echo 'Installing Node.js dependencies...'
                dir('frontend') {
                    // Using npm ci for clean install
                    sh 'npm ci'
                }
            }
        }
        
        stage('Lint') {
            steps {
                echo 'Running linting checks...'
            }
        }
        
        stage('Test') {
            steps {
                echo 'Running tests...'
            }
        }
        
        stage('Build Application') {
            steps {
                echo 'Building React application...'
                dir('frontend') {
                    // Build the production-ready React app
                    sh 'npm run build'
                    echo 'Application built successfully!'
                }
            }
        }
        
    //     stage('Build Docker Image') {
    //         steps {
    //             echo 'Building Docker image...'
    //             dir('frontend') {
    //                 script {
    //                     // Build Docker image with build number tag
    //                     sh """
    //                         docker build -t ${DOCKER_IMAGE} .
    //                         docker tag ${DOCKER_IMAGE} ${DOCKER_IMAGE_LATEST}
    //                     """
    //                     echo "Docker image built: ${DOCKER_IMAGE}"
    //                 }
    //             }
    //         }
    //     }
        
    //     stage('Login to AWS ECR') {
    //         steps {
    //             echo 'Logging in to AWS ECR...'
    //             script {
    //                 // AWS credentials should be configured in Jenkins
    //                 // Using AWS CLI to get ECR login password
    //                 withCredentials([
    //                     string(credentialsId: 'aws-access-key-id', variable: 'AWS_ACCESS_KEY_ID'),
    //                     string(credentialsId: 'aws-secret-access-key', variable: 'AWS_SECRET_ACCESS_KEY')
    //                 ]) {
    //                     sh """
    //                         aws ecr get-login-password --region ${AWS_REGION} | \
    //                         docker login --username AWS --password-stdin ${ECR_REGISTRY}
    //                     """
    //                 }
    //                 echo 'Successfully logged in to AWS ECR'
    //             }
    //         }
    //     }
        
    //     stage('Push to ECR') {
    //         steps {
    //             echo 'Pushing Docker image to AWS ECR...'
    //             script {
    //                 sh """
    //                     docker push ${DOCKER_IMAGE}
    //                     docker push ${DOCKER_IMAGE_LATEST}
    //                 """
    //                 echo "Image pushed successfully!"
    //                 echo "   - ${DOCKER_IMAGE}"
    //                 echo "   - ${DOCKER_IMAGE_LATEST}"
    //             }
    //         }
    //     }
    // }
    
    // post {
    //     always {
    //         echo 'Cleaning up...'
    //         // Clean up Docker images to save space
    //         sh """
    //             docker rmi ${DOCKER_IMAGE} || true
    //             docker rmi ${DOCKER_IMAGE_LATEST} || true
    //         """
    //     }
    //     success {
    //         echo 'Frontend Pipeline completed successfully!'
    //         echo "Image: ${DOCKER_IMAGE}"
    //     }
    //     failure {
    //         echo 'Frontend Pipeline failed!'
    //     }
    }
}

